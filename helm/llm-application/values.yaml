replicaCount: 1

nameOverride: ""
fullnameOverride: ""

image:
  repository: registry.example.com/llm-training
  tag: ""
  pullPolicy: IfNotPresent

imagePullSecrets: []

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

securityContext: {}

resources:
  limits:
    cpu: 16
    memory: 64Gi
    nvidia.com/gpu: 1
  requests:
    cpu: 8
    memory: 32Gi
    nvidia.com/gpu: 1

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: false
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: llm.example.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
    # - secretName: llm-tls
    #   hosts:
    #     - llm.example.com

tolerations:
  - key: "gpu-node"
    operator: "Equal"
    value: "true"
    effect: "PreferNoSchedule"

vpa:
  enabled: false

# use this link to find the best values for you.
# https://docs.otc.t-systems.com/cloud-container-engine/umn/storage/elastic_volume_service/using_an_evs_disk_through_a_dynamic_pv.html
persistence:
  enabled: true
  storageClass: "csi-disk"
  size: 100Gi
  volumeType: "SAS"
  encryptKeyId: ""
  volumeTags: '{"application":"llm"}'
  fsType: "xfs"                   # File system type (xfs or ext4)
  volumeNamePrefix: "llm"
  region: "eu-de"
  zone: "eu-de-01"

labels: {}
  # environment: "production"
  # model-type: "llm"
  # training-batch: "batch-42"
  # region: "eu-de"

podLabels: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

secrets:
  existingSecret: ""  # Name of an existing secret (leave empty if not used)
  apiKey: ""  # API key value (leave empty if using existingSecret)